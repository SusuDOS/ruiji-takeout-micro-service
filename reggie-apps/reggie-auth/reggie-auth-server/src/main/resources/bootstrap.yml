# @xxx@ 从pom.xml中取值, 所以 @xx@ 标注的值，都不能从nacos中获取
reggie:
  nacos:
    ip: ${NACOS_IP:@pom.nacos.ip@}
    port: ${NACOS_PORT:@pom.nacos.port@}
    namespace: ${NACOS_ID:@pom.nacos.namespace@}

spring:
  application:
    name: @project.artifactId@
  profiles:
    active: @pom.profile.name@
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      config:
        server-addr: ${reggie.nacos.ip}:${reggie.nacos.port}
        file-extension: yml
        namespace: ${reggie.nacos.namespace}
        shared-dataids: common.yml,redis.yml,mysql.yml
        refreshable-dataids: common.yml
        enabled: true
      discovery:
        server-addr: ${reggie.nacos.ip}:${reggie.nacos.port}
        namespace: ${reggie.nacos.namespace}
        metadata: # 元数据，用于权限服务实时获取各个服务的所有接口
          management.context-path: ${server.servlet.context-path:}${spring.mvc.servlet.path:}${management.endpoints.web.base-path:}
  aop:
    proxy-target-class: true
    auto: true

# 只能配置在bootstrap.yml ，否则会生成 log.path_IS_UNDEFINED 文件夹
# window会自动在 代码所在盘 根目录下自动创建文件夹，  如： D:/data/projects/logs
logging:
  file:
    path: /data/projects/logs
    name: ${logging.file.path}/${spring.application.name}/root.log

# 用于/actuator/info
info:
  name: '@project.name@'
  description: '@project.description@'
  version: '@project.version@'
  spring-boot-version: '@spring.boot.version@'
  spring-cloud-version: '@spring.cloud.version@'

dubbo:
  scan:
    # dubbo 服务扫描基准包
    base-packages: com.szl.reggie
  protocol:
    # dubbo 协议
    name: dubbo
    port: 20885
  registry:
    address: nacos://127.0.0.1:8848
  application:
    qos:
      port: 22245 # dubbo qos端口配置  命令行注入
  consumer:
    check: false
    timeout: 90000
    retries: -1
  cloud:
    subscribed-services: ''